# Generated by Django 5.2.4 on 2025-08-03 10:17

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('events', '0001_initial'),
        ('orders', '0005_invoice'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('payment_type', models.CharField(choices=[('card', 'Credit/Debit Card'), ('bank', 'Bank Transfer'), ('mobile_money', 'Mobile Money'), ('ussd', 'USSD'), ('qr', 'QR Code'), ('barter', 'Barter'), ('mpesa', 'M-Pesa'), ('gh_mo_mo', 'Ghana Mobile Money'), ('ug_mo_mo', 'Uganda Mobile Money'), ('franc_mo_mo', 'Francophone Mobile Money'), ('emz_mo_mo', 'EMZ Mobile Money'), ('apple_pay', 'Apple Pay'), ('google_pay', 'Google Pay')], max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('min_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('max_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('processing_fee', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('fixed_fee', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('flutterwave_code', models.CharField(max_length=50, unique=True)),
                ('country_code', models.CharField(default='NG', max_length=3)),
                ('currency', models.CharField(default='NGN', max_length=3)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'payment_methods',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PaymentPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('currency', models.CharField(default='NGN', max_length=3)),
                ('interval', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('yearly', 'Yearly')], max_length=10)),
                ('interval_count', models.IntegerField(default=1)),
                ('flutterwave_plan_id', models.CharField(blank=True, max_length=100, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'payment_plans',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PaymentSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subscription_id', models.CharField(max_length=100, unique=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('cancelled', 'Cancelled'), ('expired', 'Expired'), ('paused', 'Paused')], default='active', max_length=20)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('next_payment_date', models.DateTimeField()),
                ('flutterwave_subscription_id', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to=settings.AUTH_USER_MODEL)),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to='payments.paymentplan')),
            ],
            options={
                'db_table': 'payment_subscriptions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PaymentTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_id', models.CharField(max_length=100, unique=True)),
                ('reference', models.CharField(max_length=100, unique=True)),
                ('flutterwave_reference', models.CharField(blank=True, max_length=100, null=True)),
                ('transaction_type', models.CharField(choices=[('order', 'Order Payment'), ('invoice', 'Invoice Payment'), ('event', 'Event Payment'), ('subscription', 'Subscription Payment'), ('refund', 'Refund'), ('transfer', 'Transfer')], max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('successful', 'Successful'), ('failed', 'Failed'), ('cancelled', 'Cancelled'), ('expired', 'Expired'), ('reversed', 'Reversed')], default='pending', max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('currency', models.CharField(default='NGN', max_length=3)),
                ('fee', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('net_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_type', models.CharField(blank=True, max_length=20, null=True)),
                ('customer_email', models.EmailField(max_length=254)),
                ('customer_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('customer_name', models.CharField(max_length=200)),
                ('payment_url', models.URLField(blank=True, null=True)),
                ('redirect_url', models.URLField(blank=True, null=True)),
                ('callback_url', models.URLField(blank=True, null=True)),
                ('flutterwave_response', models.JSONField(blank=True, default=dict)),
                ('flutterwave_webhook_data', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('paid_at', models.DateTimeField(blank=True, null=True)),
                ('expired_at', models.DateTimeField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to=settings.AUTH_USER_MODEL)),
                ('event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payments', to='events.event')),
                ('invoice', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payments', to='orders.invoice')),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payments', to='orders.order')),
                ('payment_method', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='payments.paymentmethod')),
                ('receipt', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payments', to='orders.orderreceipt')),
            ],
            options={
                'db_table': 'payment_transactions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PaymentRefund',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('refund_id', models.CharField(max_length=100, unique=True)),
                ('reference', models.CharField(max_length=100, unique=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('reason', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('successful', 'Successful'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('flutterwave_response', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('original_transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='refunds', to='payments.paymenttransaction')),
            ],
            options={
                'db_table': 'payment_refunds',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PaymentWebhook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('webhook_id', models.CharField(max_length=100, unique=True)),
                ('event_type', models.CharField(max_length=50)),
                ('webhook_data', models.JSONField()),
                ('processed', models.BooleanField(default=False)),
                ('processing_error', models.TextField(blank=True, null=True)),
                ('received_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='webhooks', to='payments.paymenttransaction')),
            ],
            options={
                'db_table': 'payment_webhooks',
                'ordering': ['-received_at'],
            },
        ),
    ]
