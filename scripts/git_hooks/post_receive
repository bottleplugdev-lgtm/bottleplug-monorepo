#!/bin/bash

# Git post-receive hook for automatic deployment
# This hook is triggered when code is pushed to the repository

set -e

# Configuration
DEPLOYMENT_DIR="/opt/bottleplug"
LOG_FILE="$DEPLOYMENT_DIR/logs/git_deploy.log"
COMPOSE_FILE="$DEPLOYMENT_DIR/docker-compose.prod.yml"

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log() {
    echo -e "${BLUE}[$(date +'%Y-%m-%d %H:%M:%S')]${NC} $1" | tee -a "$LOG_FILE"
}

success() {
    echo -e "${GREEN}‚úÖ $1${NC}" | tee -a "$LOG_FILE"
}

error() {
    echo -e "${RED}‚ùå $1${NC}" | tee -a "$LOG_FILE"
}

# Read the ref that was pushed
while read oldrev newrev refname; do
    # Only deploy if pushing to main/master branch
    if [[ $refname == "refs/heads/main" ]] || [[ $refname == "refs/heads/master" ]]; then
        log "üöÄ Git push detected on $refname, starting deployment..."
        
        # Change to deployment directory
        cd "$DEPLOYMENT_DIR"
        
        # Pull latest changes
        log "üì• Pulling latest changes..."
        git fetch origin
        git reset --hard origin/main
        
        # Run deployment script
        log "üî® Running deployment..."
        if [ -f "./scripts/deploy.sh" ]; then
            ./scripts/deploy.sh deploy
            success "üéâ Deployment completed successfully!"
        else
            error "Deployment script not found!"
            exit 1
        fi
        
        # Send notification (optional)
        if [ -n "$SLACK_WEBHOOK" ]; then
            curl -X POST -H 'Content-type: application/json' \
                --data "{\"text\":\"üöÄ BottlePlug deployed successfully from git push!\"}" \
                "$SLACK_WEBHOOK"
        fi
    else
        log "Push to $refname ignored (not main/master branch)"
    fi
done
